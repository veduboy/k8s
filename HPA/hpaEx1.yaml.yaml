apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: php-apache
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: php-apache
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50


____________________________________

# exported version 
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  annotations:
    autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","lastTransitionTime":"2019-08-04T18:27:05Z","reason":"ScaleDownStabilized","message":"recent
      recommendations were higher than current one, applying the highest recent recommendation"},{"type":"ScalingActive","status":"True","lastTransitionTime":"2019-08-04T18:27:05Z","reason":"ValidMetricFound","message":"the
      HPA was able to successfully calculate a replica count from cpu resource utilization
      (percentage of request)"},{"type":"ScalingLimited","status":"False","lastTransitionTime":"2019-08-04T18:29:35Z","reason":"DesiredWithinRange","message":"the
      desired count is within the acceptable range"}]'
    autoscaling.alpha.kubernetes.io/current-metrics: '[{"type":"Resource","resource":{"name":"cpu","currentAverageUtilization":0,"currentAverageValue":"1m"}}]'
  creationTimestamp: 2019-08-04T18:26:50Z
  name: php-apache
  namespace: default
  resourceVersion: "22097680"
  selfLink: /apis/autoscaling/v1/namespaces/default/horizontalpodautoscalers/php-apache
  uid: 6cf41714-b6e5-11e9-b2e1-66b444e25a8e
spec:
  maxReplicas: 10
  minReplicas: 1
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: php-apache
  targetCPUUtilizationPercentage: 50
status:
  currentCPUUtilizationPercentage: 0
  currentReplicas: 10
  desiredReplicas: 10
  lastScaleTime: 2019-08-04T18:29:35Z



# follow these step in order to deploy and test horizontal pod autoscaling 
# kubectl run php-apache --image=gcr.io/google_containers/hpa-example --requests=cpu=200m --expose --port=80
# kubectl autoscale deployment php-apache --cpu-percent=50 --min=1 --max=10
# kubectl get hpa
# Step Three: Increase load
# kubectl run -i --tty load-generator --image=busybox /bin/sh
# while true; do wget -q -O- http://php-apache.default.svc.cluster.local; done
# Step Four: Stop load
# We will finish our example by stopping the user load.
# In the terminal where we created the container with busybox image, terminate the load generation by typing <Ctrl> + C.





